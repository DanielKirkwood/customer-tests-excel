<package>
  <metadata>
    <id>CustomerTestsExcel</id>
    <version>2.0.2</version>
    <authors>Cedd Burge</authors>
    <title>Customer Tests Excel</title>
    <description>A framework to round trip NUnit to / from Microsoft Excel customer tests</description>
    <summary>Round trip NUnit / Microsoft Excel customer tests</summary>
    <projectUrl>https://github.com/resgroup/customer-tests-excel</projectUrl>
    <repository type="git" url="https://github.com/resgroup/customer-tests-excel" />
    <license type="expression">MIT</license>
    <icon>media\customer-tests-excel-icon-small.png</icon>
    <copyright>Copyright Â© Cedd Burge 2020</copyright>
    <tags>nunit excel customer-tests acceptance-tests end-to-end-tests code-generation</tags>
    <releaseNotes>Bug fix: Include DocumentFormat.OpenXml as a dependency</releaseNotes>
    <dependencies>
      <!-- I thought these were worked out automatically from the csproj, but they are not. I think this is because just using the csproj is the recommended thing to do now, but I can't do that, as there is no equivalent of the <files> element as far as I am aware -->
      <dependency id="DocumentFormat.OpenXml" version="[2,3]" />
      <!-- System.IO.Packaging is a depedency of DocumentFormat.OpenXml, and should be brought in by it, but it isn't, for some reason I don't understand, so bringing it in manually -->
      <dependency id="System.IO.Packaging" version="[4,5]" />
      <dependency id="Microsoft.CSharp" version="[4,5)" />
      <dependency id="Moq" version="[4,5)" />
      <dependency id="NUnit" version="[3,4)" />
    </dependencies>
  </metadata>
  <files>
    <file src="..\media\customer-tests-excel-icon-small.png" target="media\" />
    <file src="bin\Release\netstandard2.0\CustomerTestsExcel.dll" target="lib\net45" />
    <file src="..\GenerateCodeFromExcelTest\bin\Release\netcoreapp3.1\**\*" target="tools\GenerateCodeFromExcelTest" />
    <file src="..\AddNavigationToSpecificationHTMLOutputFiles\bin\Release\netcoreapp3.1\**\*" target="tools\AddNavigationToSpecificationHTMLOutputFiles" />
  </files>
</package>